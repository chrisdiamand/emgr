#!/usr/bin/env bash

# Copyright 2016-2017 Chris Diamand
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


if [[ -n ${TEST_VERBOSE+x} ]]; then
    set -o verbose -x
fi

shopt -s expand_aliases

EMGR_DIRS=( "$TEST_DIR/envs" )

function tc_fail() {
    echo "Failed!"
    exit 1
}

function fail_if_var_set() {
    if check_var_set "$1"; then
        echo "Error: '$1' is set, but shouldn't be:" `typeset -p "$1"`
        exit 1
    fi
}

function fail_if_var_not_set() {
    if ! check_var_set "$1"; then
        echo "Error: '$1' is not set, but should be."
        exit 1
    fi
}

function fail_if_function_defined() {
    if type "$1"; then
        echo "Error: '$1' is defined, but shouldn't be:" `type "$1"`
        exit 1
    fi
}

function fail_if_function_not_defined() {
    if ! type "$1" >&/dev/null; then
        echo "Error: '$1' not defined, but it should be."
        exit 1
    fi
}

alias fail_if_alias_defined='fail_if_function_defined'
alias fail_if_alias_not_defined='fail_if_function_not_defined'

function fail_if_var_condition_true() {
    local operator="$1" varname="$2" value="$3" curval=
    eval "curval=\${$varname}"

    if [ "$curval" $operator "$value" ]; then
        echo "Error: '$varname' (= '$curval') $operator '$value'"
        exit 1
    fi
}

alias fail_if_var_not_equal='fail_if_var_condition_true !='

function emgr_setup() {
    source "$TEST_DIR/../emgr_setup"
}

function check_var_set() {
    if typeset -p "$1" >&/dev/null; then
        return 0
    else
        return 1
    fi
}

function tc_symlink_env() {
    local env_name="$1" env_target="$2"
    local env_link_path="$TEST_DIR/envs/$env_name.env.sh"
    local env_target_path="$TEST_DIR/envs/$env_target.env.sh"

    rm -f "$env_link_path"
    ln -s -T "$env_target_path" "$env_link_path"
}
