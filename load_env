#!/usr/bin/env bash

# Copyright 2016-2017 Chris Diamand
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


function inherit_env_path() {
    local env_path="$1" err=0
    if [[ -n ${EMGR_ENV_PARENT+x} ]]; then
        local old_env_parent="$EMGR_ENV_PARENT"
    fi
    if [[ -n ${EMGR_ENV_LOCAL+x} ]]; then
        local old_env_local="$EMGR_ENV_LOCAL"
        export EMGR_ENV_PARENT="$old_env_local"
    fi

    for e in "${_EMGR_envs_loaded[@]}"; do
        if [[ "$e" == "$env_path" ]]; then
            echo "Error: Env $env already loaded!"
            return 1
        fi
    done

    _EMGR_envs_loaded=( "${_EMGR_envs_loaded[@]}" "$env_path" )
    export EMGR_ENV_LOCAL=`_EMGR_get_env_name_from_path "$env_path"`

    source "$env_path" || err=1

    if [[ -n ${old_env_local+empty_if_not_set} ]]; then
        export EMGR_ENV_LOCAL="$old_env_local"
    else
        unset EMGR_ENV_LOCAL
    fi

    if [[ -n ${old_env_parent+empty_if_not_set} ]]; then
        export EMGR_ENV_PARENT="$old_env_parent"
    else
        unset EMGR_ENV_PARENT
    fi

    return "$err"
}

function inherit_env() {
    local env="$1"
    local env_path=`_EMGR_path_for_env_relative "$env"`

    if [[ -z "$env_path" ]]; then
        echo "Error: Couldn't find env '$env'"
        return 1
    fi

    inherit_env_path "$env_path"
}

function inherit_env_no_relative() {
    local env="$1"
    local env_path=`_EMGR_path_for_env_absolute "$env"`

    if [[ -z "$env_path" ]]; then
        echo "Error: Couldn't find env '$env'"
        return 1
    fi

    inherit_env_path "$env_path"
}

_EMGR_envs_loaded=()

inherit_env_no_relative "$EMGR_ENV_CURRENT" && _EMGR_adjust_prompt "$EMGR_ENV_CURRENT"
